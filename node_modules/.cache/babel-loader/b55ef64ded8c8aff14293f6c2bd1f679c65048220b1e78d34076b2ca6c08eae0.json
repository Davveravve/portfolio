{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\portfolio\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\n// src/pages/Home.js\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  // We'll get actual project types from the projects themselves\n  const [projectTypes, setProjectTypes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchProjectTypes = async () => {\n      try {\n        setLoading(true);\n\n        // In a real implementation, you'd fetch this from your API\n        // For now, we're using mock data that represents your actual projects\n        // This ensures we only show types that exist\n\n        // Simulate API request delay\n        await new Promise(resolve => setTimeout(resolve, 300));\n\n        // Get unique project types from the projects\n        // This is a simplified example - in reality, you'd fetch this from your actual projects\n        const mockProjects = [{\n          id: 'GameProject1',\n          info: {\n            type: 'Game'\n          }\n        }, {\n          id: 'WebsiteProject1',\n          info: {\n            type: 'Website'\n          }\n        }];\n\n        // Extract unique types\n        const types = [...new Set(mockProjects.map(project => project.info.type))];\n        setProjectTypes(types);\n      } catch (error) {\n        console.error('Error fetching project types:', error);\n        // Fallback to some default types if there's an error\n        setProjectTypes(['Game', 'Website']);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProjectTypes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(HomeContainer, {\n    children: /*#__PURE__*/_jsxDEV(ProjectTypesSection, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TypesContainer, {\n        children: loading ? /*#__PURE__*/_jsxDEV(LoadingText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this) : projectTypes.map((type, index) => /*#__PURE__*/_jsxDEV(TypeCard, {\n          initial: {\n            opacity: 0,\n            y: 20\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          transition: {\n            delay: index * 0.1\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/projects/${type}`,\n            children: /*#__PURE__*/_jsxDEV(TypeTitle, {\n              children: type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n// Styled Components\n_s(Home, \"5WAGRUnGpnyEwBfQfgK7rUYMCIY=\");\n_c = Home;\nconst HomeContainer = styled.div`\n  padding: 0 2rem;\n  background-color: #0a0e17;\n  min-height: 100vh;\n  color: white;\n`;\n_c2 = HomeContainer;\nconst ProjectTypesSection = styled.section`\n  padding-top: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n_c3 = ProjectTypesSection;\nconst SectionTitle = styled.h2`\n  color: white;\n  font-size: 2.5rem;\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n_c4 = SectionTitle;\nconst LoadingText = styled.p`\n  text-align: center;\n  font-size: 1.2rem;\n  opacity: 0.7;\n`;\n_c5 = LoadingText;\nconst TypesContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 2rem;\n`;\n_c6 = TypesContainer;\nconst TypeCard = styled(motion.div)`\n  background-color: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  overflow: hidden;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  height: 150px;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);\n    background-color: rgba(196, 91, 91, 0.2);\n  }\n  \n  a {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    width: 100%;\n    padding: 2rem;\n    color: white;\n    text-decoration: none;\n  }\n`;\n_c7 = TypeCard;\nconst TypeTitle = styled.h3`\n  font-size: 2rem;\n  text-align: center;\n`;\n_c8 = TypeTitle;\nexport default Home;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"HomeContainer\");\n$RefreshReg$(_c3, \"ProjectTypesSection\");\n$RefreshReg$(_c4, \"SectionTitle\");\n$RefreshReg$(_c5, \"LoadingText\");\n$RefreshReg$(_c6, \"TypesContainer\");\n$RefreshReg$(_c7, \"TypeCard\");\n$RefreshReg$(_c8, \"TypeTitle\");","map":{"version":3,"names":["React","useEffect","useState","Link","styled","motion","jsxDEV","_jsxDEV","Home","_s","projectTypes","setProjectTypes","loading","setLoading","fetchProjectTypes","Promise","resolve","setTimeout","mockProjects","id","info","type","types","Set","map","project","error","console","HomeContainer","children","ProjectTypesSection","SectionTitle","fileName","_jsxFileName","lineNumber","columnNumber","TypesContainer","LoadingText","index","TypeCard","initial","opacity","y","animate","transition","delay","to","TypeTitle","_c","div","_c2","section","_c3","h2","_c4","p","_c5","_c6","_c7","h3","_c8","$RefreshReg$"],"sources":["C:/Users/David/Desktop/portfolio/src/pages/Home.js"],"sourcesContent":["// src/pages/Home.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Home = () => {\r\n  // We'll get actual project types from the projects themselves\r\n  const [projectTypes, setProjectTypes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  useEffect(() => {\r\n    const fetchProjectTypes = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // In a real implementation, you'd fetch this from your API\r\n        // For now, we're using mock data that represents your actual projects\r\n        // This ensures we only show types that exist\r\n        \r\n        // Simulate API request delay\r\n        await new Promise(resolve => setTimeout(resolve, 300));\r\n        \r\n        // Get unique project types from the projects\r\n        // This is a simplified example - in reality, you'd fetch this from your actual projects\r\n        const mockProjects = [\r\n          { id: 'GameProject1', info: { type: 'Game' } },\r\n          { id: 'WebsiteProject1', info: { type: 'Website' } }\r\n        ];\r\n        \r\n        // Extract unique types\r\n        const types = [...new Set(mockProjects.map(project => project.info.type))];\r\n        setProjectTypes(types);\r\n      } catch (error) {\r\n        console.error('Error fetching project types:', error);\r\n        // Fallback to some default types if there's an error\r\n        setProjectTypes(['Game', 'Website']);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchProjectTypes();\r\n  }, []);\r\n  \r\n  return (\r\n    <HomeContainer>\r\n      <ProjectTypesSection>\r\n        <SectionTitle></SectionTitle>\r\n        <TypesContainer>\r\n          {loading ? (\r\n            <LoadingText></LoadingText>\r\n          ) : (\r\n            projectTypes.map((type, index) => (\r\n              <TypeCard\r\n                key={type}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: index * 0.1 }}\r\n              >\r\n                <Link to={`/projects/${type}`}>\r\n                  <TypeTitle>{type}</TypeTitle>\r\n                </Link>\r\n              </TypeCard>\r\n            ))\r\n          )}\r\n        </TypesContainer>\r\n      </ProjectTypesSection>\r\n    </HomeContainer>\r\n  );\r\n};\r\n\r\n// Styled Components\r\nconst HomeContainer = styled.div`\r\n  padding: 0 2rem;\r\n  background-color: #0a0e17;\r\n  min-height: 100vh;\r\n  color: white;\r\n`;\r\n\r\nconst ProjectTypesSection = styled.section`\r\n  padding-top: 2rem;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  color: white;\r\n  font-size: 2.5rem;\r\n  margin-bottom: 2rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst LoadingText = styled.p`\r\n  text-align: center;\r\n  font-size: 1.2rem;\r\n  opacity: 0.7;\r\n`;\r\n\r\nconst TypesContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 2rem;\r\n`;\r\n\r\nconst TypeCard = styled(motion.div)`\r\n  background-color: rgba(255, 255, 255, 0.05);\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  height: 150px;\r\n  \r\n  &:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);\r\n    background-color: rgba(196, 91, 91, 0.2);\r\n  }\r\n  \r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 2rem;\r\n    color: white;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst TypeTitle = styled.h3`\r\n  font-size: 2rem;\r\n  text-align: center;\r\n`;\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}